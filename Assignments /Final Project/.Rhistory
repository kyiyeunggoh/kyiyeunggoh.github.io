framehu13<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2013")
framehu12<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2012")
framehu11<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2011")
framehu10<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2010")
framehu09<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2009")
framehu08<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2008")
framehu07<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2007")
framehu06<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2006")
framehu05<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2005")
framehu04<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2004")
framehu03<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2003")
View(framehu03)
## Biography scraper
cv<-read_html("http://www.chinavitae.com/biography/Hu_Jintao/career")
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel'/table]")%>%
html_text()
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel']/table")%>%
html_text()
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel']/table")%>%
html_table()
cv_frame_2018<-as.data.frame(cv_table)
View(cv_frame_2018)
## Biography scraper
biodata_scrapeR<-function(webpage){
cv<-read_html(webpage)
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel']/table")%>%
html_table()
cv_frame_2018<-as.data.frame(cv_table)
bioframe<-cv_frame_2018[,c(1,2)]
}
xibiodata<-
hubiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hu_Jintao/career")
xibiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Xi_Jinping/career")
hubiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hu_Jintao/career")
View(xibiodata)
jiangbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Jiang_Zemin/career")
dengbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Deng_Xiaoping/career")
View(dengbiodata)
yangbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Yang_Shangkun/career")
dengbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Deng_Xiaoping/career")
huabiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hua_Guofeng/career")
maobiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Mao_Zedong/career")
huabiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hua_Guofeng/career")
source('~/Desktop/Columbia/Spring 19/Data Viz ARCH/Final Project/chinavitaescrape.R')
library(rvest)
library(tidyverse)
library(kableExtra)
library(stringr)
library(xml2)
library(httr)
library(dplyr)
library(data.table)
library(rowr)
library(maps)
data(world.cities)
# 1 link example
cv<-read_html("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2018")
cv_table<-cv%>%
html_nodes(xpath="//*[@class='link12']")%>%
html_text()
cv_frame_2018<-as.data.frame(cv_table)
cv_frame_2018a<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\W+", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018b<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\d", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018xi<-cbind.fill(cv_frame_2018b,cv_frame_2018a)
colnames(cv_frame_2018xi)[1:2] <- c("date", "event")
#string detect cities and then combine to get country, lat, long
world.cities1<-world.cities%>%
filter(nchar(name)>4)%>%
filter(pop>55000)
cities<-as.list(world.cities1$name)
cities_str<-paste(unlist(cities), collapse='|')
citieslist<-as.data.frame(str_match(cv_frame_2018xi$event,cities_str))
country<-as.list(world.cities$country.etc)
country_str<-paste(unlist(country), collapse='|')
countrylist<-as.data.frame(str_extract(cv_frame_2018xi$event,country_str))
xi2018travel<-cbind(cv_frame_2018xi,citieslist,countrylist)
colnames(xi2018travel)[3:4] <- c("name", "visitorvisitor")
xi2018travel$name<-as.character(xi2018travel$name)
xi2018travel$name[xi2018travel$name=="China"]<-"Beijing"
combinedframe<-left_join(xi2018travel,world.cities1,by="name")
cv_scrapeR<-function(webpage){
data("world.cities")
cv<-read_html(webpage)
cv_table<-cv%>%
html_nodes(xpath="//*[@class='link12']")%>%
html_text()
cv_frame_2018<-as.data.frame(cv_table)
cv_frame_2018a<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\W+", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018b<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\d", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018xi<-cbind.fill(cv_frame_2018b,cv_frame_2018a)
colnames(cv_frame_2018xi)[1:2] <- c("date", "event")
world.cities1<-world.cities%>%
filter(nchar(name)>4)%>%
filter(pop>55000)
cities<-as.list(world.cities1$name)
cities_str<-paste(unlist(cities), collapse='|')
citieslist<-as.data.frame(str_match(cv_frame_2018xi$event,cities_str))
country<-as.list(world.cities$country.etc)
country_str<-paste(unlist(country), collapse='|')
countrylist<-as.data.frame(str_extract(cv_frame_2018xi$event,country_str))
xi2018travel<-cbind(cv_frame_2018xi,citieslist,countrylist)
colnames(xi2018travel)[3:4] <- c("name", "visitorvisitor")
xi2018travel$name<-as.character(xi2018travel$name)
xi2018travel$name[xi2018travel$name=="China"]<-"Beijing"
combinedframe<-left_join(xi2018travel,world.cities1,by="name")
}
# this is still subject to visual inspection because some cities are not in database, so check names = NA
framexi19<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2019")
framexi18<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2018")
framexi17<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2017")
framexi16<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2016")
framexi15<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2015")
framexi14<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2014")
framexi13<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2013")
framehu13<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2013")
framehu12<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2012")
framehu11<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2011")
framehu10<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2010")
framehu09<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2009")
framehu08<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2008")
framehu07<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2007")
framehu06<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2006")
framehu05<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2005")
framehu04<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2004")
framehu03<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2003")
## Biography scraper
biodata_scrapeR<-function(webpage){
cv<-read_html(webpage)
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel']/table")%>%
html_table()
cv_frame_2018<-as.data.frame(cv_table)
bioframe<-cv_frame_2018[,c(1,2)]
}
xibiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Xi_Jinping/career")
hubiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hu_Jintao/career")
jiangbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Jiang_Zemin/career")
dengbiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Deng_Xiaoping/career")
huabiodata<-biodata_scrapeR("http://www.chinavitae.com/biography/Hua_Guofeng/career")
#Mao probs from wiki
#LiuSQ probs from wiki
View(framexi18)
View(xibiodata)
View(xibiodata)
devtools::install_github("rstudio/r2d3")
setwd("~/Desktop/Columbia/Spring 19/Data Viz ARCH/Final Project")
write_csv(framexi19,"framexi19.csv")
library(rvest)
library(tidyverse)
library(kableExtra)
library(stringr)
library(xml2)
library(httr)
library(dplyr)
library(data.table)
library(rowr)
library(maps)
data(world.cities)
# 1 link example
cv<-read_html("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2018")
cv_table<-cv%>%
html_nodes(xpath="//*[@class='link12']")%>%
html_text()
cv_frame_2018<-as.data.frame(cv_table)
cv_frame_2018a<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\W+", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018b<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\d", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018xi<-cbind.fill(cv_frame_2018b,cv_frame_2018a)
colnames(cv_frame_2018xi)[1:2] <- c("date", "event")
#string detect cities and then combine to get country, lat, long
world.cities1<-world.cities%>%
filter(nchar(name)>4)%>%
filter(pop>55000)
cities<-as.list(world.cities1$name)
cities_str<-paste(unlist(cities), collapse='|')
citieslist<-as.data.frame(str_match(cv_frame_2018xi$event,cities_str))
country<-as.list(world.cities$country.etc)
country_str<-paste(unlist(country), collapse='|')
countrylist<-as.data.frame(str_extract(cv_frame_2018xi$event,country_str))
xi2018travel<-cbind(cv_frame_2018xi,citieslist,countrylist)
colnames(xi2018travel)[3:4] <- c("name", "visitorvisitor")
xi2018travel$name<-as.character(xi2018travel$name)
xi2018travel$name[xi2018travel$name=="China"]<-"Beijing"
combinedframe<-left_join(xi2018travel,world.cities1,by="name")
cv_scrapeR<-function(webpage){
data("world.cities")
cv<-read_html(webpage)
cv_table<-cv%>%
html_nodes(xpath="//*[@class='link12']")%>%
html_text()
cv_frame_2018<-as.data.frame(cv_table)
cv_frame_2018a<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\W+", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018b<-as.data.frame(cv_frame_2018[sapply(gregexpr("\\d", cv_frame_2018$cv_table), length) >5,])
cv_frame_2018xi<-cbind.fill(cv_frame_2018b,cv_frame_2018a)
colnames(cv_frame_2018xi)[1:2] <- c("date", "event")
world.cities1<-world.cities%>%
filter(nchar(name)>4)%>%
filter(pop>55000)
cities<-as.list(world.cities1$name)
cities_str<-paste(unlist(cities), collapse='|')
citieslist<-as.data.frame(str_match(cv_frame_2018xi$event,cities_str))
country<-as.list(world.cities$country.etc)
country_str<-paste(unlist(country), collapse='|')
countrylist<-as.data.frame(str_extract(cv_frame_2018xi$event,country_str))
xi2018travel<-cbind(cv_frame_2018xi,citieslist,countrylist)
colnames(xi2018travel)[3:4] <- c("name", "visitorvisitor")
xi2018travel$name<-as.character(xi2018travel$name)
xi2018travel$name[xi2018travel$name=="China"]<-"Beijing"
combinedframe<-left_join(xi2018travel,world.cities1,by="name")
}
# this is still subject to visual inspection because some cities are not in database, so check names = NA
framexi19<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2019")
framexi18<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2018")
framexi17<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2017")
framexi16<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2016")
framexi15<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2015")
framexi14<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2014")
framexi13<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=303&filter_year=2013")
framehu13<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2013")
framehu12<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2012")
framehu11<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2011")
framehu10<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2010")
framehu09<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2009")
framehu08<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2008")
framehu07<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2007")
framehu06<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2006")
framehu05<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2005")
framehu04<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2004")
framehu03<-cv_scrapeR("http://www.chinavitae.com/vip/index.php?mode=events&type=cv&id=19&filter_year=2003")
write_csv(framexi19,"framexi19.csv")
write_csv(framexi18,"framexi18.csv")
combined_xi<-rbind(framexi19,framexi18,framexi17,framexi16,framexi15,framexi14,framexi13)
View(combined_xi)
combined_xi$country.etc[combined_xi$country.etc==""]<-"China"
combined_xi$country.etc[combined_xi$country.etc==NA]<-"China"
combined_xi$country.etc[combined_xi$country.etc=NA]<-"China"
combined_xi$country.etc[is.na(combined_xi$country.etc)==TRUE]<-"China"
source('~/Desktop/Columbia/Spring 19/Data Viz ARCH/Final Project/chinavitaescrape.R')
combined_xi%>%
filter(country.etc=="China")
combined_xiprovince<-combined_xi%>%
filter(country.etc=="China")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(to.lower(combined_xiprovince$event),"ˆprovince")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"ˆprovince")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"province")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"municipality")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
count(str_detect(tolower(combined_xiprovince$event),"province")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
count(str_detect(tolower(combined_xiprovince$event),"^province")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
cstr_detect(tolower(combined_xiprovince$event),"^province")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"^province")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"province")
##split and retain string prior to the occurence of the word "Province" or "Municipality"
str_detect(tolower(combined_xiprovince$event),"province") ==TRUE
##split and retain string prior to the occurence of the word "Province" or "Municipality"
sum(str_detect(tolower(combined_xiprovince$event),"province")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
sum(str_detect(tolower(combined_xiprovince$event),"province|county|township|village")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
sum(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|special")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
sum(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
sum(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xi%>%
(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xi%>%
filter((str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE))
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xi%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE)
View(xi_NOTbeijing)
sub('.*,\\s*', '', tolower(xi_NOTbeijing$event)
sub('.*,\\s*', '', tolower(xi_NOTbeijing$event))
sub(".*?,", "", tolower(xi_NOTbeijing$event))
sub(".*?(\\province)$", "\\1", sub(",.*", "", tolower(xi_NOTbeijing$event), perl=TRUE)
sub(".*?(\\province)$", "\\1", sub(",.*", "", tolower(xi_NOTbeijing$event), perl=TRUE))
sub(".*?(\\province)$", "\\1", sub(",.*", "", tolower(xi_NOTbeijing$event)), perl=TRUE)
sub(".*?(\\w+)$", "\\1", sub(",.*", "", tolower(xi_NOTbeijing$event)), perl=TRUE)
sub(".*?(\\w+)$", "\\2", sub(",.*", "", tolower(xi_NOTbeijing$event)), perl=TRUE)
sub("(?<=province)(\w*)", "\\1", sub(",.*", "", namelist), perl=TRUE)
sub("(?<=province)(\\w*)", "\\1", sub(",.*", "", namelist), perl=TRUE)
sub("(?<=province)(\\w*)", "\\1", sub(",.*", "", tolower(xi_NOTbeijing$event)), perl=TRUE)
sub("\w+(?=\s+province|county|township|village|administrative|SAR)", tolower(xi_NOTbeijing$event))
sub("\\w+(?=\s+province|county|township|village|administrative|SAR)", tolower(xi_NOTbeijing$event))
sub("\w+(?=\s+province)", tolower(xi_NOTbeijing$event))
sub("\\w+(?=\\s+province)", tolower(xi_NOTbeijing$event))
sub("\w+(?=\s+province)", tolower(xi_NOTbeijing$event))
str_extract("\w+(?=\s+province)", tolower(xi_NOTbeijing$event))
str_extract("\\w+\\b(?=\\province)", tolower(xi_NOTbeijing$event))
str_extract("\\w\\b(?=\\province)", tolower(xi_NOTbeijing$event))
str_extract("\\w+(?=\\province)", tolower(xi_NOTbeijing$event))
sub("\w+(?=\s+province)", tolower(xi_NOTbeijing$event))
grep("\w+(?=\s+province)", tolower(xi_NOTbeijing$event))
source('~/Desktop/Columbia/Spring 19/Data Viz ARCH/Final Project/chinavitaescrape.R', echo=TRUE)
keywords<-"province|county|township|village|administrative|SAR"
sub(keywords, "\\1", xi_NOTbeijing$event)
keywords<-"(province|county|township|village|administrative|SAR)(.)*"
sub(keywords, "\\1", xi_NOTbeijing$event)
gsub(".*(((\\W{1,})\\w{1,}){3}keywords((\\W{1,})\\w{1,}){3}).*", "\\1", xi_NOTbeijing$event, perl = TRUE)
gsub(".*(((\\W{1,})\\w{1,}){1}keywords((\\W{1,})\\w{1,}){1}).*", "\\1", xi_NOTbeijing$event, perl = TRUE)
gsub(".*(((\\w{1,}){1}keywords((\\W{1,})\\w{1,}){1}).*", "\\1", xi_NOTbeijing$event, perl = TRUE)
str_extract(xi_NOTbeijing$event, "(( \\S+){1} game")
str_extract(xi_NOTbeijing$event, "(( \\S+){3} keyword [[:punct:]\\s]*( \\S+){3})")
str_extract(xi_NOTbeijing$event, "(( \\S+){3} keyword)")
gsub(".*(((\\W{1,})\\w{1,}){1} keyword.*", "\\1", xi_NOTbeijing$event, perl = TRUE)
gsub(".*(((\\W{1,})\\w{1,}){1} keyword", "\\1", xi_NOTbeijing$event, perl = TRUE)
str_extract(xi_NOTbeijing$event, '\w+(?=\s+keywords)')
str_extract(xi_NOTbeijing$event, '\\w+(?=\s+keywords)')
str_extract(xi_NOTbeijing$event, '(?=>keywords\\s)\\w+')
str_extract(xi_NOTbeijing$event, '(?=>province\\s)\\w+')
str_extract(xi_NOTbeijing$event, '(?=>in\\s)\\w+')
str_extract(xi_NOTbeijing$event, '(?<=in\\s)\\w+')
str_extract(xi_NOTbeijing$event, '(?<=province\\s)\\w+')
gsub("^province\\s([^ ]*).*$", "\\1", xi_NOTbeijing$event)
list<-gsub("^province\\s([^ ]*).*$", "\\1", xi_NOTbeijing$event)
list<-as.data.frame(gsub("^province\\s([^ ]*).*$", "\\1", xi_NOTbeijing$event))
View(list)
list<-as.data.frame(gsub("^province,\\s([^ ]*).*$", "\\1", xi_NOTbeijing$event))
View(world.cities)
View(list)
list<-stringr::str_extract(xi_NOTbeijing$event, '(?<=in\\s)\\w+')
list<-stringr::str_extract(xi_NOTbeijing$event, '(?<=Province\\s)\\w+')
sub("\\Province.*","",xi_NOTbeijing$event)
list<-sub("\\keywords.*","",xi_NOTbeijing$event)
list<-as.data.frame(sub("\\keywords.*","",xi_NOTbeijing$event))
View(list)
list<-as.data.frame(sub("\\province.*","",xi_NOTbeijing$event))
list<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
provinces<-sub('^.* ([[:alnum:]]+)$', '\\1', list)
provinces<-str_extract('^.* ([[:alnum:]]+)$', '\\1', list)
provinces<-stri_extract_last_words(list)
library(stringi)
provinces<-stri_extract_last_words(list)
province<-stringr::str_extract(xi_NOTbeijing$event, '(?<=Province\\s)\\w+')
provinces<-stri_extract_last_words(province)
province<-stringr::str_extract(xi_NOTbeijing$event, '(?<=Province\\s)\\w+')
list<-as.data.frame(stringr::str_extract(xi_NOTbeijing$event, '(?<=Province\\s)\\w+'))
View(list)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR")==TRUE)
View(xi2018travel)
list<-as.data.frame(str_extract(xi_NOTbeijing$event, '(?<=Province\\s)\\w+'))
View(list)
list<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
View(list)
provinces<-stri_extract_last_words(province)
province<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
provinces<-stri_extract_last_words(province)
provinces<-as.data.frame(stri_extract_last_words(province))
View(provinces)
provinces<-as.data.frame(str_extract(province, '\\w+$'))
province<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
provinces<-as.data.frame(stringr::str_extract(province, '\\w+$'))
provinces<-as.data.frame(tail(strsplit(province$`sub("\\province.*", "", tolower(xi_NOTbeijing$event))`,split=" ")[[1]],1))
province<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
provinces<-as.data.frame(stringr::str_extract(province$`sub("\\province.*", "", tolower(xi_NOTbeijing$event))`, '\\w+$'))
province$`sub("\\province.*", "", tolower(xi_NOTbeijing$event))`
province<-as.data.frame(sub("\\province.*","",tolower(xi_NOTbeijing$event)))
province$`sub("\\province.*", "", tolower(xi_NOTbeijing$event))`
View(province)
colnames(province)[1] <- "province"
province$province
word(strprovince$province,-1)
word(province$province,-1)
as.character(province$province)
stri_extract_last_words("The quick brown fox")
stri_extract_last_words(province$province)
xi_provinces<-stri_extract_last_words(province$province)
xi_provinces<-as.data.frame(stri_extract_last_words(province$province))
merge(xi_NOTbeijing,xi_provinces)
xi_domestic<-cbind(xi_NOTbeijing,xi_provinces)
View(xi_domestic)
xi_domestic %>% distinct(date, .keep_all = TRUE)
xi_domestic<-xi_domestic %>% distinct(date, .keep_all = TRUE)
View(xi_domestic)
xi_domestic<-cbind(xi_NOTbeijing,xi_provinces)
xi_domestic<-xi_domestic %>% distinct(date, .keep_all = TRUE)
colnames(xi_domestic)[10] <- "province"
xi_domestic %>%
group_by(province) %>%
tally()
xi_provincecount<-xi_domestic %>%
group_by(province) %>%
tally()
View(xi_provincecount)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR|
autonomous|kong|macao")==TRUE)
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
View(province)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR|
autonomous")==TRUE)
keywords<-"(province|county|township|village|administrative|SAR|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
keywords<-"(province|county|township|village|administrative|SAR|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
keywords<-"(province|county|township|village|administrative|SAR|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
keywords<-"(province|county|township|village|administrative|sar|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR|
autonomous")==TRUE)
keywords<-"(province|county|township|village|administrative|sar|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
colnames(province)[1] <- "province"
as.character(province$province)
xi_provinces<-as.data.frame(stri_extract_last_words(province$province))
xi_domestic<-cbind(xi_NOTbeijing,xi_provinces)
xi_domestic<-xi_domestic %>% distinct(date, .keep_all = TRUE)
colnames(xi_domestic)[10] <- "province"
xi_provincecount<-xi_domestic %>%
group_by(province) %>%
tally()
## Biography scraper
biodata_scrapeR<-function(webpage){
cv<-read_html(webpage)
cv_table<-cv%>%
html_nodes(xpath="//*[@id='dataPanel']/table")%>%
html_table()
cv_frame_2018<-as.data.frame(cv_table)
bioframe<-cv_frame_2018[,c(1,2)]
}
View(xi_provincecount)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR|
autonomous")==TRUE)
keywords<-"(province|county|township|village|administrative|sar|
autonomous)(.)*"
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
colnames(province)[1] <- "province"
as.character(province$province)
province<-as.data.frame(sub("\\keywords.*","",tolower(xi_NOTbeijing$event)))
colnames(province)[1] <- "province"
as.character(province$province)
province<-as.data.frame(sub("", paste0(keywords, collapse="|"), ".*","",tolower(xi_NOTbeijing$event)))
keywords<-"province|county|township|village|administrative|sar|
autonomous"
province<-as.data.frame(sub("", paste0(keywords, collapse="|"), ".*","",tolower(xi_NOTbeijing$event)))
words<-paste0("\\b(", paste0(keywords, collapse="|"), ")\\b")
words
place<-gsub(words, "", xi_NOTbeijing$event)
place<-as.data.frame(gsub(words, "", xi_NOTbeijing$event))
View(place)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|SAR|
autonomous")==TRUE)
View(xi_NOTbeijing)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),"province|county|township|village|administrative|sar|
autonomous")==TRUE)
View(xi_NOTbeijing)
View(combined_xiprovince)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(c("province,county,township,village,administrative,sar,
autonomous"),collapse = '|')==TRUE))
##split and retain string prior to the occurence of the word "Province" or "Municipality"
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(c("province,county,township,village,administrative,sar,
autonomous")),collapse = '|')==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
keywords<-c("province,county,township,village,administrative,sar,autonomous")
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(keywords,collapse = '|'))==TRUE)
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(keywords,collapse = "|"))==TRUE)
##split and retain string prior to the occurence of the word "Province" or "Municipality"
keywords<-c("province","county","township","village","administrative","sar","autonomous")
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(keywords,collapse = "|"))==TRUE)
province<-as.data.frame(gsub(keywords,"",tolower(xi_NOTbeijing$event)))
View(province)
province<-as.data.frame(gsub(keywords,"",tolower(xi_NOTbeijing$event)))
keywords<-c("province.*","county.*","township.*","village.*","administrative.*","sar.*","autonomous.*")
keywords<-c("province","county","township","village","administrative","sar","autonomous")
xi_NOTbeijing<-combined_xiprovince%>%
filter(str_detect(tolower(combined_xiprovince$event),paste(keywords,collapse = "|"))==TRUE)
keywords1<-c("province.*","county.*","township.*","village.*","administrative.*","sar.*","autonomous.*")
province<-as.data.frame(gsub(keywords1,"",tolower(xi_NOTbeijing$event)))
View(province)
source('~/Desktop/Columbia/Spring 19/Data Viz ARCH/Final Project/chinavitaescrape.R')
